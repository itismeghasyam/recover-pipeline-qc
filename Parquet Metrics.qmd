---
title: "Parquet Metrics"
author: "Pranav Anbarasu"
format:
  html:
    embed-resources: true
    toc: true
    smooth-scroll: true
    df-print: paged
execute:
  echo: false
  cache: true
---

```{r}
#| output: false
#| warning: false

library(lubridate)
library(stringr)
library(dplyr)
library(arrow)
library(tidyr)
```

```{r}
#| output: false

enrolled <- arrow::open_dataset('./parquet/dataset_enrolledparticipants/') %>% as_tibble()
fitbit_actlogs <- arrow::open_dataset('./parquet/dataset_fitbitactivitylogs//') %>% as_tibble()
fitbit_dailydata <- arrow::open_dataset('./parquet/dataset_fitbitdailydata//') %>% as_tibble()
fitbit_devices <- arrow::open_dataset('./parquet/dataset_fitbitdevices/') %>% as_tibble()
fitbit_intracomb <- arrow::open_dataset('./parquet/dataset_fitbitintradaycombined/') %>% 
  select(ParticipantIdentifier) %>% 
  distinct() %>% 
  as_tibble()
fitbit_rhr <- arrow::open_dataset('./parquet/dataset_fitbitrestingheartrates/') %>% as_tibble()
fitbit_sleeplogs <- arrow::open_dataset('./parquet/dataset_fitbitsleeplogs/') %>% as_tibble()
googlefit <- arrow::open_dataset('./parquet/dataset_googlefitsamples/') %>% as_tibble()
hk_activitysummaries <- arrow::open_dataset('./parquet/dataset_healthkitv2activitysummaries/') %>% as_tibble() # No device vars
hk_ecg <- arrow::open_dataset('./parquet/dataset_healthkitv2electrocardiogram/') %>% as_tibble() # Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier (replace_na Apple Watch and iPhone), StartDate
hk_heartbeat <- arrow::open_dataset('./parquet/dataset_healthkitv2heartbeat/') %>% as_tibble() # Device_Name, Device_Model, Device_HardwareVersion, Source_Name (replace_na Apple Watch and iPhone), StartDate
hk_samples <- arrow::open_dataset('./parquet/dataset_healthkitv2samples/') %>% 
  select(ParticipantIdentifier, Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier, StartDate) %>% 
  as_tibble() # Device_Name, Device_Model, Device_HardwareVersion, Source_Name (replace_na Apple Watch and iPhone), StartDate
hk_stats <- arrow::open_dataset('./parquet/dataset_healthkitv2statistics/') %>% as_tibble() # No device vars
hk_workouts <- arrow::open_dataset('./parquet/dataset_healthkitv2workouts/') %>% as_tibble() # Device_Name, Device_Model, Device_HardwareVersion, Source_Name (replace_na Apple Watch and iPhone), StartDate
symptomlog <- arrow::open_dataset('./parquet/dataset_symptomlog/') %>% as_tibble()
```

## Count of Unique Participants

```{r}
# pq_enrolled <- 
#   enrolled %>% 
#   select(ParticipantIdentifier, EnrollmentDate) %>% 
#   mutate(EnrollmentDate = lubridate::date(EnrollmentDate))
# pq_enrolled
```

```{r}
#| output: false

all_participants_by_dataset <- tibble(dataset = character(), ParticipantIdentifier = character())
all_participants_by_dataset <- 
  bind_rows(all_participants_by_dataset, 
            (enrolled %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'enrolledparticipants')),
            (fitbit_actlogs %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'fitbit')),
            (fitbit_dailydata %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'fitbit')),
            (fitbit_devices %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'fitbit')),
            (fitbit_intracomb %>%
               select(ParticipantIdentifier) %>% 
               distinct() %>% 
               mutate(dataset = 'fitbit')),
            (fitbit_rhr %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'fitbit')),
            (fitbit_sleeplogs %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'fitbit')),
            (googlefit %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'googlefit')),
            (hk_activitysummaries %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'healthkit')),
            (hk_ecg %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'healthkit')),
            (hk_heartbeat %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'healthkit')),
            (hk_samples %>%
               select(ParticipantIdentifier) %>% 
               distinct() %>% 
               mutate(dataset = 'healthkit')),
            (hk_stats %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'healthkit')),
            (hk_workouts %>% 
               select(ParticipantIdentifier) %>% 
               mutate(dataset = 'healthkit')),
            symptomlog %>% 
              select(ParticipantIdentifier) %>% 
              mutate(dataset = 'symptomlog')) %>% 
  group_by(dataset, ParticipantIdentifier) %>% 
  distinct() %>% 
  ungroup()
```

::: panel-tabset
### By Cohort

```{r}
all_participants_by_dataset %>%
  group_by(cohort = case_when(
    startsWith(ParticipantIdentifier, "RA") ~ "Adult",
    startsWith(ParticipantIdentifier, "RP") ~ "Pediatric",
    TRUE ~ "Other"
  )) %>%
  summarise(n_participants = n_distinct(ParticipantIdentifier))
```

### Per Dataset

```{r}
all_participants_by_dataset %>% 
  group_by(dataset) %>% 
  summarise(n_participants = n_distinct(ParticipantIdentifier))
```

### Contributing to Multiple Datasets
```{r}
all_participants_by_dataset %>% 
  group_by(ParticipantIdentifier) %>%
  summarise(n_datasets_contributing_to = n_distinct(dataset)) %>%
  group_by(n_datasets_contributing_to) %>%
  summarise(n_participants = n())
```

:::

```{r}
# print(glue::glue('n = {pq_enrolled$ParticipantIdentifier %>% n_distinct()} unique participants (Adults: {pq_enrolled %>%
#   filter(str_starts(ParticipantIdentifier, "RA")) %>%
#   distinct(ParticipantIdentifier) %>%
#   tally()}, Pediatric: {pq_enrolled %>%
#   filter(str_starts(ParticipantIdentifier, "RP")) %>%
#   distinct(ParticipantIdentifier) %>%
#   tally()}) in the EnrolledParticipants dataset as of {pq_enrolled$EnrollmentDate %>% max()}'))
```

## Count of Records

A record is a single row in a parquet dataset (after removal of duplicate data)

```{r}
pq_n_records <- tibble()
for (dir in list.dirs('./parquet/', recursive = F)) {
  rows <- open_dataset(dir) %>% nrow()
  name <- basename(dir)
  current <- tibble(dataset = name, n_records = rows)
  pq_n_records <- bind_rows(pq_n_records, current)
}
```

```{r}
pq_n_records %>% arrange(desc(n_records))
```

<!-- ### Average number of days of data per participant -->

```{r}

```

## Unique Devices

::: panel-tabset
### Fitbit

```{r}
pq_pids_by_fitbit_devices <- 
  fitbit_devices %>% 
  select(ParticipantIdentifier, Device, Type) %>% 
  group_by(Device, Type) %>% 
  summarise(n_participants = n_distinct(ParticipantIdentifier), .groups = 'keep') %>% 
  arrange(desc(n_participants))
pq_pids_by_fitbit_devices
```

### Google Fit

```{r}
pq_pids_by_googlefit <- 
  googlefit %>% 
  select(ParticipantIdentifier, OriginalDataSourceDeviceModel, OriginalDataSourceDeviceType) %>% 
  group_by(OriginalDataSourceDeviceModel, OriginalDataSourceDeviceType) %>% 
  summarise(n_participants = n_distinct(ParticipantIdentifier), .groups = 'keep') %>% 
  arrange(desc(n_participants)) %>% 
  rename(DeviceModel=OriginalDataSourceDeviceModel,
         DeviceType=OriginalDataSourceDeviceType)
pq_pids_by_googlefit
```

### HealthKit

```{r}
#| output: false

hk_devices <- bind_rows(
  (hk_ecg %>% 
    select(ParticipantIdentifier, Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier, StartDate) %>% 
    mutate(Source_Identifier = gsub('com\\.apple\\.health.*', 'com.apple.health', Source_Identifier))),
  (hk_heartbeat %>% 
    select(ParticipantIdentifier, Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier, StartDate) %>% 
    mutate(Source_Identifier = gsub('com\\.apple\\.health.*', 'com.apple.health', Source_Identifier))),
  (hk_samples %>%
    select(ParticipantIdentifier, Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier, StartDate) %>%
    mutate(Source_Identifier = gsub('com\\.apple\\.health.*', 'com.apple.health', Source_Identifier))),
  (hk_workouts %>% 
    select(ParticipantIdentifier, Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier, StartDate) %>% 
    mutate(Source_Identifier = gsub('com\\.apple\\.health.*', 'com.apple.health', Source_Identifier)) %>% 
    group_by(Device_Name, Device_Model, Device_HardwareVersion, Source_Identifier))
  )
```

```{r}
hk_devices %>% 
  group_by(Device_Model, Device_HardwareVersion, Source_Identifier) %>% 
  summarise(n_participants = n_distinct(ParticipantIdentifier), .groups = 'keep') %>% 
  arrange(desc(n_participants))
```

```{r}
hk_devices %>%
  select(ParticipantIdentifier, Device_Model, Device_HardwareVersion, Source_Identifier) %>%
  mutate(Source_Identifier = str_to_lower(Source_Identifier)) %>%
  mutate(Source = ifelse(
    !is.na(Device_HardwareVersion) &
      grepl("Watch|iPhone", Device_HardwareVersion, ignore.case = TRUE),
    Device_HardwareVersion,
    ifelse(
      !is.na(Device_Model) &
        grepl("withings|garmin|oura", Device_Model, ignore.case = TRUE),
      Device_Model,
      Source_Identifier
    )
  )) %>%
  mutate(Source = case_when(
    Source == 'com.apple.health' ~ 'com.apple.health (non-native)',
    TRUE ~ Source
  )) %>%
  group_by(Source) %>%
  summarise(n_participants = n_distinct(ParticipantIdentifier), .groups = 'keep') %>%
  arrange(desc(n_participants)) %>% 
  ungroup()
```

:::

### Devices per Participant

```{r}
devices_per_pid_fitbit <- 
  fitbit_devices %>% 
  select(ParticipantIdentifier, Device, Type) %>% 
  group_by(ParticipantIdentifier) %>%
  summarise(n_devices_per_participant = n_distinct(Device)) %>% 
  group_by(n_devices_per_participant) %>% 
  count() %>% 
  ungroup() %>% 
  rename(n_participants = n) %>% 
  mutate(dataset = 'fitbit')

devices_per_pid_googlefit <- 
  googlefit %>% 
  select(ParticipantIdentifier, OriginalDataSourceDeviceModel, OriginalDataSourceDeviceType) %>% 
  rename(DeviceModel=OriginalDataSourceDeviceModel,
         DeviceType=OriginalDataSourceDeviceType) %>% 
  group_by(ParticipantIdentifier) %>% 
  summarise(n_devices_per_participant = n_distinct(DeviceModel)) %>% 
  group_by(n_devices_per_participant) %>% 
  count() %>% 
  ungroup() %>% 
  rename(n_participants = n) %>% 
  mutate(dataset = 'googlefit')

devices_per_pid_hk <- 
  hk_devices %>% 
  select(ParticipantIdentifier, Device_HardwareVersion) %>% 
  group_by(ParticipantIdentifier) %>% 
  summarise(n_devices_per_participant = n_distinct(Device_HardwareVersion)) %>% 
  group_by(n_devices_per_participant) %>% 
  count() %>% 
  ungroup() %>% 
  rename(n_participants = n) %>% 
  mutate(dataset = 'healthkit')

bind_rows(devices_per_pid_fitbit, 
          devices_per_pid_googlefit, 
          devices_per_pid_hk) %>% 
  group_by(dataset) %>% 
  arrange(n_devices_per_participant, .by_group = T) %>% 
  select(dataset, everything())
```

### Number of Participants Without Device Data Found in Non-Device Files

E.g. 5 unique participant identifiers missing from the fitbit_devices dataset were found in the fitbit_activitylogs dataset

::: panel-tabset
#### Fitbit

```{r}
#| output: false

mismatch_pids_fitbit <- (all_participants_by_dataset %>% filter(dataset=='fitbit') %>% pull(ParticipantIdentifier) %>% unique() %>% sort())[which(!((all_participants_by_dataset %>% filter(dataset=='fitbit') %>% pull(ParticipantIdentifier) %>% unique() %>% sort()) %in% (fitbit_devices$ParticipantIdentifier %>% unique() %>% sort())))]
```

```{r}
data.frame(
  dataset = c("activitylogs", "dailydata", "intradaycombined", "restingheartrate", "sleeplogs"),
  n_participants = c(
    length(mismatch_pids_fitbit[which(mismatch_pids_fitbit %in% (fitbit_actlogs$ParticipantIdentifier %>% unique() %>% sort()))]),
    length(mismatch_pids_fitbit[which(mismatch_pids_fitbit %in% (fitbit_dailydata$ParticipantIdentifier %>% unique() %>% sort()))]),
    length(mismatch_pids_fitbit[which(mismatch_pids_fitbit %in% (fitbit_intracomb$ParticipantIdentifier %>% unique() %>% sort()))]),
    length(mismatch_pids_fitbit[which(mismatch_pids_fitbit %in% (fitbit_rhr$ParticipantIdentifier %>% unique() %>% sort()))]),
    length(mismatch_pids_fitbit[which(mismatch_pids_fitbit %in% (fitbit_sleeplogs$ParticipantIdentifier %>% unique() %>% sort()))])
  )
)
```
:::
